<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://0xack13.github.io/0xackBlog/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Sep 2015 23:38:50 +0300</lastBuildDate>
    <atom:link href="http://0xack13.github.io/0xackBlog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>about3</title>
      <link>http://0xack13.github.io/0xackBlog/about3/</link>
      <pubDate>Fri, 25 Sep 2015 23:38:50 +0300</pubDate>
      
      <guid>http://0xack13.github.io/0xackBlog/about3/</guid>
      <description>&lt;p&gt;&lt;code&gt;New Trend&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>C# Expression Bodied-Members</title>
      <link>http://0xack13.github.io/0xackBlog/CSharpEBM/</link>
      <pubDate>Fri, 25 Sep 2015 23:15:32 +0300</pubDate>
      
      <guid>http://0xack13.github.io/0xackBlog/CSharpEBM/</guid>
      <description>&lt;p&gt;A new cool feature introduced in C# 6.0 that enables writing one-liner methods. As it might seem, it&amp;rsquo;s no brainer to use the EBM as long as you understand using lambdas in C#. The beauty also is that you can pass parameters to the expression.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s another example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-CSharp&#34;&gt;using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CSharp6Preview
{
    class Program
    {
	var ebmVar = &amp;quot;my EBM!&amp;quot;;
        static void EBM() =&amp;gt; Console.WriteLine(&amp;quot;Welcome to my EBM!&amp;quot;);
	static void EBMwithParam(var ebmVar) =&amp;gt; Console.WriteLine($&amp;quot;Welcome to my {ebmVar}&amp;quot;);
	static void Main(string[] args)
        {
            EBM();
	    EBMwithParam(ebmVar);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A side note is that the &lt;code&gt;$&lt;/code&gt; in the provided string in &lt;code&gt;Console.WriteLine&lt;/code&gt; is a way to format the string by passing variables to it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://0xack13.github.io/0xackBlog/about/</link>
      <pubDate>Fri, 25 Sep 2015 22:58:34 +0300</pubDate>
      
      <guid>http://0xack13.github.io/0xackBlog/about/</guid>
      <description>&lt;p&gt;odssd
sd
ds
ds&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>